FUNCTION_BLOCK VariableInference

VAR_INPUT
	A	:	REAL; (* RANGE(0 ..) *) 
	B	:	REAL; (* RANGE(0 ..) *) 
	C	:	REAL; (* RANGE(0 ..) *) 
END_VAR

VAR_OUTPUT
	Z	:	REAL;
END_VAR
	
FUZZIFY A
	TERM LT1 := (0, 0) (50, 1) (100, 0) ;
	TERM LT2 := (0, 0) (25, 1) (50, 1) (100, 0) ;
END_FUZZIFY

FUZZIFY B
	TERM LT1 := (0, 0) (50, 1) (100, 0) ;
	TERM LT2 := (0, 0) (50, 1) (100, 0) ;
END_FUZZIFY

FUZZIFY C
	TERM LT1 := (0, 0) (50, 1) (100, 0) ;
	TERM LT2 := (0, 0) (50, 1) (100, 0) ;
END_FUZZIFY

DEFUZZIFY Z
	TERM LT1 := 1 ;
	TERM LT2 := 2 ;
	METHOD: COGS ;
END_DEFUZZIFY
	
RULEBLOCK Z

ACT:MIN;
AND:MIN;
ACCU:MAX;
RULE 0: IF (A IS LT1) OR (B IS LT1) OR (C IS LT1) THEN Z IS LT1;
RULE 1: IF (A IS LT2) OR (B IS LT2) OR (C IS LT2) THEN Z IS LT2;

END_RULEBLOCK

END_FUNCTION_BLOCK

FUNCTION_BLOCK AccessControl

VAR_INPUT
	Z	:	REAL; (* RANGE(0 ..) *) 
END_VAR

VAR_OUTPUT
	Read	:	REAL;
	Write	: 	REAL;
END_VAR
	
FUZZIFY Z
END_FUZZIFY

DEFUZZIFY Read
	TERM Deny := 0 ;
	TERM Grant := 1 ;
	METHOD: COGS ;
END_DEFUZZIFY

DEFUZZIFY Write
	TERM Deny := 0 ;
	TERM Grant := 1 ;
	METHOD: COGS ;
END_DEFUZZIFY
	
RULEBLOCK Read

ACT:MIN;
AND:MIN;
ACCU:MAX;
RULE 0: IF (Z IS LT1) THEN Read IS Deny;
RULE 1: IF (Z IS LT2) THEN Read IS Grant;

END_RULEBLOCK

RULEBLOCK Write

AND:MIN;
ACCU:MAX;
RULE 0: IF (Z IS LT1) THEN Write IS Deny;
RULE 1: IF (Z IS LT2) THEN Write IS Grant;

END_RULEBLOCK

END_FUNCTION_BLOCK